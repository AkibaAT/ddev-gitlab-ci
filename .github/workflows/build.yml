name: Build

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Build and test image
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        version: [ stable ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Docker info
        run: docker info
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup bats and bats libs
        id: setup-bats
        uses: bats-core/bats-action@3.0.0
      - name: Check out code
        uses: actions/checkout@v1
      - name: "Test ddev ${{ matrix.version }} image"
        shell: 'script -q -e -c "bash {0}"'
        env:
          BATS_LIB_PATH: ${{ steps.setup-bats.outputs.lib-path }}
        run: |
          sudo snap install yq
          ./build.sh -v ${{ matrix.version }} -l
          DDEV_VERSION=${{ matrix.version }} bash bats tests

  build:
    needs: test
    name: Build and push arch-specific images
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: [ stable ]
        platform: [ amd64, arm64 ]
        include:
          - platform: amd64
            runs-on: ubuntu-24.04
          - platform: arm64
            runs-on: ubuntu-24.04-arm
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Docker info
        run: docker info
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: "Build ddev ${{ matrix.platform }} image"
        shell: 'script -q -e -c "bash {0}"'
        run: SUFFIX="-${{ matrix.platform }}" ./build.sh -v ${{ matrix.version }} -p

  merge-manifests:
    needs: build
    name: Merge manifests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: [ stable ]
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Docker info
        run: docker info
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: "Merge ${{ matrix.version }} manifests"
        shell: 'script -q -e -c "bash {0}"'
        run: ./build.sh -v ${{ matrix.version }} -m
